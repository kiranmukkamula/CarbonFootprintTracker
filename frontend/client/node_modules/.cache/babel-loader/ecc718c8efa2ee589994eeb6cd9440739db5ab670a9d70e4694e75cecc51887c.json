{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import {\n//   LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer\n// } from \"recharts\";\n// import { useNavigate } from \"react-router-dom\";\n\n// export default function Tracker({ onLogout }) {\n//   const [entries, setEntries] = useState([]);\n//   const [activity, setActivity] = useState(\"\");\n//   const [emission, setEmission] = useState(\"\");\n//   const [riskInfo, setRiskInfo] = useState(null);\n//   const navigate = useNavigate();\n\n//   const user = JSON.parse(localStorage.getItem(\"user\"));\n\n//   useEffect(() => {\n//     if (!user?.id) return;\n\n//     fetch(`http://localhost:5000/api/entries?userId=${user.id}`)\n//       .then((res) => res.json())\n//       .then((data) => setEntries(data));\n//   }, [user?.id]);\n\n//   const getRiskCategory = (emission) => {\n//     if (emission < 5) {\n//       return { category: \"Safe Usage\", color: \"green\", advice: \"You're doing great! Keep it up.\" };\n//     } else if (emission < 10) {\n//       return { category: \"Medium Risk Usage\", color: \"orange\", advice: \"Try reducing travel or power consumption.\" };\n//     } else {\n//       return { category: \"Dangerous Usage\", color: \"red\", advice: \"Consider using public transport or reducing appliance usage.\" };\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!activity || !emission || !user?.id) return;\n\n//     const emissionVal = parseFloat(emission);\n\n//     const res = await fetch(\"http://localhost:5000/api/entries\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ activity, emission: emissionVal, userId: user.id }),\n//     });\n\n//     const newEntry = await res.json();\n//     setEntries([newEntry, ...entries]);\n//     setActivity(\"\");\n//     setEmission(\"\");\n\n//     const risk = getRiskCategory(emissionVal);\n//     setRiskInfo(risk);\n//   };\n\n//   const handleLogout = () => {\n//     localStorage.removeItem(\"user\");\n//     if (onLogout) onLogout();\n//     navigate(\"/login\");\n//   };\n\n//   const chartData = entries\n//     .slice()\n//     .reverse()\n//     .map((e) => ({\n//       date: new Date(e.date).toLocaleDateString(),\n//       emission: Number(e.emission),\n//     }));\n\n//   return (\n//     <div className=\"relative max-w-2xl mx-auto mt-10 p-6 border border-gray-300 rounded-xl bg-white shadow-md\">\n//       {/* Top bar */}\n//       <div className=\"flex justify-between items-center mb-6\">\n//         <h1 className=\"text-2xl font-bold text-green-700\">Carbon Footprint Tracker</h1>\n//         <button onClick={handleLogout} className=\"bg-blue-600 text-white px-4 py-1 rounded-lg hover:bg-blue-500\">\n//           Logout\n//         </button>\n//       </div>\n\n//       {/* Form */}\n//       <form onSubmit={handleSubmit} className=\"space-x-2 mb-6\">\n//         <input\n//           className=\"border rounded-lg px-2 py-1\"\n//           value={activity}\n//           onChange={(e) => setActivity(e.target.value)}\n//           placeholder=\"Activity\"\n//         />\n//         <input\n//           className=\"border rounded-lg px-2 py-1\"\n//           value={emission}\n//           onChange={(e) => setEmission(e.target.value)}\n//           type=\"number\"\n//           placeholder=\"Emission (kg CO₂e)\"\n//           min=\"0\"\n//         />\n//         <button type=\"submit\" className=\"bg-green-600 text-white px-4 py-1 rounded-lg hover:bg-green-500\">\n//           Add Entry\n//         </button>\n//       </form>\n\n//       {/* Risk Box */}\n//       {riskInfo && (\n//         <div className=\"absolute top-2 left-2 right-2 bg-white border-l-8 rounded-md p-4 shadow z-20\"\n//              style={{ borderColor: riskInfo.color }}>\n//           <div className=\"flex justify-between\">\n//             <h2 className={`text-lg font-semibold text-${riskInfo.color}-700`}>\n//               {riskInfo.category}\n//             </h2>\n//             <button onClick={() => setRiskInfo(null)} className=\"text-gray-600 hover:text-black\">&times;</button>\n//           </div>\n//           <p className=\"text-sm mt-1\">{riskInfo.advice}</p>\n//         </div>\n//       )}\n\n//       {/* Entries */}\n//       <h2 className=\"text-xl font-semibold text-gray-800 mb-2 mt-8\">Entries</h2>\n//       <ul className=\"space-y-2\">\n//         {entries.length === 0 && <li>No entries yet.</li>}\n//         {entries.map((entry) => (\n//           <li key={entry._id} className=\"border-b pb-2 text-sm\">\n//             <strong>{new Date(entry.date).toLocaleDateString()}</strong>: {entry.activity} — {entry.emission} kg CO₂e\n//           </li>\n//         ))}\n//       </ul>\n\n//       {/* Chart */}\n//       <h3 className=\"text-lg font-semibold text-gray-900 mt-10 mb-2\">Emissions Over Time</h3>\n//       <ResponsiveContainer width=\"100%\" height={300}>\n//         <LineChart data={chartData}>\n//           <CartesianGrid strokeDasharray=\"3 3\" />\n//           <XAxis dataKey=\"date\" />\n//           <YAxis label={{ value: \"kg CO₂e\", angle: -90, position: \"insideLeft\" }} />\n//           <Tooltip />\n//           <Line type=\"monotone\" dataKey=\"emission\" stroke=\"#10b981\" />\n//         </LineChart>\n//       </ResponsiveContainer>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/react/code/frontend/client/src/pages/Tracker.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import {\r\n//   LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer\r\n// } from \"recharts\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// export default function Tracker({ onLogout }) {\r\n//   const [entries, setEntries] = useState([]);\r\n//   const [activity, setActivity] = useState(\"\");\r\n//   const [emission, setEmission] = useState(\"\");\r\n//   const [riskInfo, setRiskInfo] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n//   useEffect(() => {\r\n//     if (!user?.id) return;\r\n\r\n//     fetch(`http://localhost:5000/api/entries?userId=${user.id}`)\r\n//       .then((res) => res.json())\r\n//       .then((data) => setEntries(data));\r\n//   }, [user?.id]);\r\n\r\n//   const getRiskCategory = (emission) => {\r\n//     if (emission < 5) {\r\n//       return { category: \"Safe Usage\", color: \"green\", advice: \"You're doing great! Keep it up.\" };\r\n//     } else if (emission < 10) {\r\n//       return { category: \"Medium Risk Usage\", color: \"orange\", advice: \"Try reducing travel or power consumption.\" };\r\n//     } else {\r\n//       return { category: \"Dangerous Usage\", color: \"red\", advice: \"Consider using public transport or reducing appliance usage.\" };\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!activity || !emission || !user?.id) return;\r\n\r\n//     const emissionVal = parseFloat(emission);\r\n\r\n//     const res = await fetch(\"http://localhost:5000/api/entries\", {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify({ activity, emission: emissionVal, userId: user.id }),\r\n//     });\r\n\r\n//     const newEntry = await res.json();\r\n//     setEntries([newEntry, ...entries]);\r\n//     setActivity(\"\");\r\n//     setEmission(\"\");\r\n\r\n//     const risk = getRiskCategory(emissionVal);\r\n//     setRiskInfo(risk);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     localStorage.removeItem(\"user\");\r\n//     if (onLogout) onLogout();\r\n//     navigate(\"/login\");\r\n//   };\r\n\r\n//   const chartData = entries\r\n//     .slice()\r\n//     .reverse()\r\n//     .map((e) => ({\r\n//       date: new Date(e.date).toLocaleDateString(),\r\n//       emission: Number(e.emission),\r\n//     }));\r\n\r\n//   return (\r\n//     <div className=\"relative max-w-2xl mx-auto mt-10 p-6 border border-gray-300 rounded-xl bg-white shadow-md\">\r\n//       {/* Top bar */}\r\n//       <div className=\"flex justify-between items-center mb-6\">\r\n//         <h1 className=\"text-2xl font-bold text-green-700\">Carbon Footprint Tracker</h1>\r\n//         <button onClick={handleLogout} className=\"bg-blue-600 text-white px-4 py-1 rounded-lg hover:bg-blue-500\">\r\n//           Logout\r\n//         </button>\r\n//       </div>\r\n\r\n//       {/* Form */}\r\n//       <form onSubmit={handleSubmit} className=\"space-x-2 mb-6\">\r\n//         <input\r\n//           className=\"border rounded-lg px-2 py-1\"\r\n//           value={activity}\r\n//           onChange={(e) => setActivity(e.target.value)}\r\n//           placeholder=\"Activity\"\r\n//         />\r\n//         <input\r\n//           className=\"border rounded-lg px-2 py-1\"\r\n//           value={emission}\r\n//           onChange={(e) => setEmission(e.target.value)}\r\n//           type=\"number\"\r\n//           placeholder=\"Emission (kg CO₂e)\"\r\n//           min=\"0\"\r\n//         />\r\n//         <button type=\"submit\" className=\"bg-green-600 text-white px-4 py-1 rounded-lg hover:bg-green-500\">\r\n//           Add Entry\r\n//         </button>\r\n//       </form>\r\n\r\n//       {/* Risk Box */}\r\n//       {riskInfo && (\r\n//         <div className=\"absolute top-2 left-2 right-2 bg-white border-l-8 rounded-md p-4 shadow z-20\"\r\n//              style={{ borderColor: riskInfo.color }}>\r\n//           <div className=\"flex justify-between\">\r\n//             <h2 className={`text-lg font-semibold text-${riskInfo.color}-700`}>\r\n//               {riskInfo.category}\r\n//             </h2>\r\n//             <button onClick={() => setRiskInfo(null)} className=\"text-gray-600 hover:text-black\">&times;</button>\r\n//           </div>\r\n//           <p className=\"text-sm mt-1\">{riskInfo.advice}</p>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Entries */}\r\n//       <h2 className=\"text-xl font-semibold text-gray-800 mb-2 mt-8\">Entries</h2>\r\n//       <ul className=\"space-y-2\">\r\n//         {entries.length === 0 && <li>No entries yet.</li>}\r\n//         {entries.map((entry) => (\r\n//           <li key={entry._id} className=\"border-b pb-2 text-sm\">\r\n//             <strong>{new Date(entry.date).toLocaleDateString()}</strong>: {entry.activity} — {entry.emission} kg CO₂e\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n\r\n//       {/* Chart */}\r\n//       <h3 className=\"text-lg font-semibold text-gray-900 mt-10 mb-2\">Emissions Over Time</h3>\r\n//       <ResponsiveContainer width=\"100%\" height={300}>\r\n//         <LineChart data={chartData}>\r\n//           <CartesianGrid strokeDasharray=\"3 3\" />\r\n//           <XAxis dataKey=\"date\" />\r\n//           <YAxis label={{ value: \"kg CO₂e\", angle: -90, position: \"insideLeft\" }} />\r\n//           <Tooltip />\r\n//           <Line type=\"monotone\" dataKey=\"emission\" stroke=\"#10b981\" />\r\n//         </LineChart>\r\n//       </ResponsiveContainer>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}